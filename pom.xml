<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.yan</groupId>
  <artifactId>ch01-hello-mybatis</artifactId>
  <version>1.0</version>
  <packaging>jar</packaging>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
  </properties>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>

    </dependency>
    <!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java -->
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <version>5.1.46</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/org.mybatis/mybatis -->
    <dependency>
      <groupId>org.mybatis</groupId>
      <artifactId>mybatis</artifactId>
      <version>3.5.1</version>
    </dependency>


  </dependencies>

  <build>
    <resources>
      <resource>
        <!-- 告诉maven，在使用mvn compile编译src/main/java目录下的文件时，将properties和xml文件和编译成功的class文件一起拷贝到target/classes目录中。 -->
        <directory>src/main/java</directory><!-- 所在的目录 -->
        <includes>	<!--包括目录下的.properties,xm1文件都会扫描到-->
          <include>**/*.properties</include>
          <include>**/*.xml</include>
        </includes>
        <!-- filtering选项 false不启用过滤器,*.property已经起到过滤的作用了-->
        <filtering>false</filtering>
      </resource>

    <!-- 编译resources中的配置文件，让其在compile时，一起移动到target/classer中 -->
      <resource>
        <directory>src/main/resources</directory>
      </resource>
    </resources>
  </build>
</project>
